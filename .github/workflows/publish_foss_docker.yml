# #
# # This action will publish Chatwoot CE docker image.
# # This is set to run against merges to develop, master
# # and when tags are created.
# #

name: Publish Chatwoot CE docker images
on:
  push:
    branches:
      - develop
      - master
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GIT_REF: ${{ github.head_ref || github.ref_name }} # ref_name to get tags/branches
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Strip enterprise code
        run: |
          rm -rf enterprise
          rm -rf spec/enterprise

      - name: Set Chatwoot edition
        run: |
          echo -en '\nENV CW_EDITION="ce"' >> docker/Dockerfile

      - name: Bump version and push tag
        if: github.event_name == 'push'
        id: tag_version_dry
        uses: mathieudutour/github-tag-action@v6.0
        with:
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: 'true'

      - name: Build Docker image
        run: |
          RELEASE_TAG='stage-${{ env.CI_ACTION_REF_NAME_SLUG }}'
          if [[ ${{ env.CI_ACTION_REF_NAME_SLUG }} = 'develop' ]];
          then
            RELEASE_TAG='${{ steps.tag_version_dry.outputs.new_tag }}'
          fi

          docker build \
            --build-arg RELEASE_TAG=${RELEASE_TAG} \
            -t $IMAGE_NAME:latest docker/Dockerfile

      - name: Push Docker Image DockerHub (prod)
        if: github.event_name == 'push'
        run: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

          docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME_DH}:${{ steps.tag_version_dry.outputs.new_tag }}
          docker push ${IMAGE_NAME_DH}:${{ steps.tag_version_dry.outputs.new_tag }}

      - name: Bump version and push tag
        if: github.event_name == 'push'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image DockerHub
        run: |
          # echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

          TAG='stage-${{ env.CI_ACTION_REF_NAME_SLUG }}'
          if [[ ${{ env.CI_ACTION_REF_NAME_SLUG }} = 'develop' ]];
          then
            TAG='latest'
          fi

          docker tag ${IMAGE_NAME}:latest ${IMAGE_NAME_DH}:${TAG}
          # docker push ${IMAGE_NAME_DH}:${TAG}
